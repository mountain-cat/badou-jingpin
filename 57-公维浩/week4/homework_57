# week4作业
# 词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
import random


def new_dict(sentence, Dict, padding=False):
    newdict = {}
    for word in sentence:
        word_temp = []
        for i in Dict:
            if i[0] == word:
                word_temp.append(i)
        if padding is True:
            word_temp.append('')
        word_temp = sorted(word_temp, key = lambda x: len(x))
        newdict[word] = word_temp
    return newdict


def all_cut_1(sentence, newdict):
    count = 0
    words = []
    while count <= 3000:
        word = []
        for key, value in newdict.items():
            rand_num = random.randint(0, len(value) - 1)
            if value[rand_num] != '':
                word.append(value[rand_num])
        sentence1 = ''.join(word)
        if sentence1 == sentence:
            words.append(word)
        count += 1
    return words


class DAGDecode:  # 参考答案略微修改
    def __init__(self, sentence, Dict):
        self.sentence = sentence
        self.DAG = new_dict(sentence, Dict)
        self.length = len(sentence)
        self.unfinish_path = [[]]   # 保存待解码序列的队列
        self.finish_path = []  # 保存解码完成的序列的队列

    def all_cut_2(self):
        while self.unfinish_path != []:
            path = self.unfinish_path.pop()
            path_length = ''.join(path)
            if len(path_length) == self.length:
                self.finish_path.append(path)
                continue
            candidates = self.DAG[self.sentence[len(path_length)]]
            path_temp = []
            for candidate in candidates:
                path_temp = path + [candidate]
                self.unfinish_path.append(path_temp)
        return


Dict = {"经常": 0.1,
        "经": 0.05,
        "有": 0.1,
        "常": 0.001,
        "有意见": 0.1,
        "歧": 0.001,
        "意见": 0.2,
        "分歧": 0.2,
        "见": 0.05,
        "意": 0.05,
        "见分歧": 0.05,
        "分": 0.1}
# 待切分文本
sentence = "经常有意见分歧"
# 目标输出;顺序不重要
target = [
    ['经常', '有意见', '分歧'],  #
    ['经常', '有意见', '分', '歧'],
    ['经常', '有', '意见', '分歧'],
    ['经常', '有', '意见', '分', '歧'],#
    ['经常', '有', '意', '见分歧'],#
    ['经常', '有', '意', '见', '分歧'],#
    ['经常', '有', '意', '见', '分', '歧'],#
    ['经', '常', '有意见', '分歧'],#
    ['经', '常', '有意见', '分', '歧'],#
    ['经', '常', '有', '意见', '分歧'],#
    ['经', '常', '有', '意见', '分', '歧'],#
    ['经', '常', '有', '意', '见分歧'],#
    ['经', '常', '有', '意', '见', '分歧'],
    ['经', '常', '有', '意', '见', '分', '歧']  #
]

if __name__ == '__main__':
    New_dict = new_dict(sentence, Dict, padding=True)
    print('New_dict = ', New_dict, '\n')
    words = all_cut_1(sentence, New_dict)
    final_words = []
    for i in words:  # 去重
        if i not in final_words:
            final_words.append(i)
    print('切分方式1：\n')
    for i in final_words:
        print(i)
    print('切分方式2：\n')
    dd = DAGDecode(sentence, Dict)
    dd.all_cut_2()
    for i in dd.finish_path:
        print(i)
